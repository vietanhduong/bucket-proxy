name: CI

concurrency:
  group: ci-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  prepare:
    runs-on: ubuntu-22.04
    outputs:
      current_branch: ${{ steps.current_branch.outputs.value }}
      head_sha: ${{ steps.head_sha.outputs.value }}
      image_tag: ${{ steps.get_tag.outputs.image_tag }}
      branch_tag: ${{ steps.get_tag.outputs.branch_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract branch
        shell: bash
        id: current_branch
        env:
          CUR_REF: ${{ github.ref }}
          EVENT_NAME: ${{ github.event_name }}
          HEAD_REF: ${{ github.head_ref }}
        run: |
          if [[ ! "$CUR_REF"  = "refs/tags/"* ]]; then
            if [[ "$EVENT_NAME" = "pull_request" ]]; then
              HEAD_REF=$(printf "%q" "$HEAD_REF")
              HEAD_REF=${HEAD_REF/refs\/heads\//}
              BRANCH=$HEAD_REF
            else
              REF=$(printf "%q" "$CUR_REF")
              REF_BRANCH=${REF/refs\/pull\//}
              REF_BRANCH=${REF_BRANCH/refs\/heads\//}
              BRANCH=$REF_BRANCH
            fi
          else
            REF=$(printf "%q" "$CUR_REF")
            REF_BRANCH=${REF/refs\/tags\//}
            BRANCH=$REF_BRANCH
          fi
          echo "value=$BRANCH" >> $GITHUB_OUTPUT

      - name: Extract GitHub HEAD SHA
        id: head_sha
        run: echo "value=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Get Docker image tag
        id: get_tag
        env:
          CURRENT_BRANCH: ${{ steps.current_branch.outputs.value }}
        run: |
          short_sha="$(git rev-parse --short HEAD)"
          branch_tag="$(echo "$CURRENT_BRANCH" | sed 's/[^a-zA-Z0-9]/-/g' | sed 's/--*/-/g' | sed 's/-$//g')"
          echo "image_tag=$branch_tag-$short_sha" >> $GITHUB_OUTPUT
          echo "branch_tag=$branch_tag-$short_sha" >> $GITHUB_OUTPUT

  build:
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    runs-on: ubuntu-22.04
    needs:
      - prepare
    env:
      VERSION: ${{ needs.prepare.outputs.image_tag }}
      GIT_HASH: ${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT}}

      - name: "Run docker ${{ github.event_name != 'pull_request' && 'push' || 'build' }}"
        run: |
          BUILD_TARGET=docker-build
          if [[ ! "$GITHUB_EVENT_NAME" = "pull_request" ]]; then
            BUILD_TARGET=docker-push
            export BUILDPLATFORM="linux/amd64,linux/arm64"
          fi
          make $BUILD_TARGET
